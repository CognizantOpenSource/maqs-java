name: SnapShot Pipeline

on:
  push:
    branches: [ master ]

jobs:
  update_release_draft:
    name: Create/Update Release Draft
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.bash_v.outputs.version}}
    steps:
      - name: Draft Release Notes
        id: release-drafter
        uses: release-drafter/release-drafter@v5.21.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: bash_v
        run: |
          version=${calculated_v//v}
          echo "::set-output name=version::${version}"
        env:
          calculated_v: ${{steps.release-drafter.outputs.tag_name}}
  snapshot_build:
    name: SnapShot Build and Test
    runs-on: ubuntu-latest
    needs: update_release_draft
    env:
      JDK: 11
      VERSION: ${{needs.update_release_draft.outputs.version}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK}}
        uses: actions/setup-java@v3.6.0
        with:
          java-version: ${{env.JDK}}
      - name: Maven Cache
        uses: actions/cache@v3.2.2
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2
      - name: Create settings file
        uses: InstaCode/maven-settings-xml-action@v9
        with:
          profiles: '[{ "id": "sonar", "properties": { "sonar.organization":"magenic", "sonar.host.url":"https://sonarcloud.io", "sonar.login": "${{secrets.SONAR_LOGIN}}"}}]'
      - name: Set Version to ${{env.VERSION}}-SNAPSHOT and Run Unit Tests
        uses: GabrielBB/xvfb-action@v1.6
        with:
          run: mvn -Drevision="${{env.VERSION}}-SNAPSHOT" -B -Dtesting verify install --file pom.xml -e -fae -T 1C -Djdk.version=${{env.JDK}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run SonarCloud Analysis
        run: mvn -Drevision="${{env.VERSION}}-SNAPSHOT" -Psonar -B package sonar:sonar -e -f pom.xml -Dsonar.coverage.jacoco.xmlReportPaths="${{github.workspace}}/jmaqs-jacoco-reporting/target/site/jacoco-aggregate/jacoco.xml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Unit Test Results Report
        uses: scacap/action-surefire-report@v1
        if: ${{ always() }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
      - name: Upload Test Result Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Logs
          path: ./**/logs
      - name: Upload Build Artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
            name: Artifacts
            path: ./**/*.jar

#   deploy_snapshot:
#     name: Deploy SnapShot Packages
#     needs: [snapshot_build, update_release_draft]
#     runs-on: ubuntu-latest
#     env:
#       JDK: 11
#       VERSION: ${{needs.update_release_draft.outputs.version}}
#     strategy:
#       matrix:
#         #repo: [github, ossrh]
#         repo: [ ossrh ]
#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up JDK ${{env.JDK}}
#         uses: actions/setup-java@v3.6.0
#         with:
#             java-version: ${{env.JDK}}
#       - name: Maven Cache
#         uses: actions/cache@v3.2.2
#         with:
#           path: ~/.m2
#           key: ${{runner.os}}-m2
#       - name: Import GPG key
#         id: import_gpg
#         uses: crazy-max/ghaction-import-gpg@v3.0.2
#         env:
#           GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
#           PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
#       - name: Create settings file
#         uses: InstaCode/maven-settings-xml-action@v9
#         with:
#           servers: '[{"id": "ossrh", "username": "jason-edstrom", "password": "${{secrets.OSSRH_PACKAGES}}"},{"id": "github", "username": "jason-edstrom", "password": "${{secrets.PACKAGES}}"}]'
#       - uses: altinukshini/deployment-action@releases/v1
#         name: Create GitHub deployment
#         id: deployment
#         with:
#           token: "${{ github.token }}"
#           target_url: https://oss.sonatype.org/#nexus-search;quick~JMAQS
#           environment: SnapShot - ${{matrix.repo}}
#       - name: Deploy SnapShot Packages to '${{matrix.repo}}' Repository
#         run: mvn -Drevision="${{env.VERSION}}-SNAPSHOT" -Ddeploy=${{matrix.repo}} deploy -B -e -f pom.xml -Djdk.version=${{env.JDK}}
#       - name: Update deployment status (success)
#         if: success()
#         uses: altinukshini/deployment-status@releases/v1
#         with:
#           token: "${{ github.token }}"
#           target_url: https://oss.sonatype.org/#nexus-search;quick~JMAQS
#           state: "success"
#           deployment_id: ${{ steps.deployment.outputs.deployment_id }}
#       - name: Update deployment status (failure)
#         if: failure()
#         uses: altinukshini/deployment-status@releases/v1
#         with:
#           token: "${{ github.token }}"
#           target_url: https://oss.sonatype.org/#nexus-search;quick~JMAQS
#           state: "failure"
#           deployment_id: ${{ steps.deployment.outputs.deployment_id }}  

